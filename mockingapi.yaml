openapi: 3.1.0
info:
  x-logo:
    url: https://docs.mockingapi.com/logo.png
  title: "Mocking API"
  version: "1.0.0"
  contact:
    name: Support
    email: support@waldeck.io
    url: https://www.mockingapi.com
servers:
  - url: https://api.mockingapi.com/v1
security:
  - ApiKey: []
paths:
  /data/{type}:
    parameters:
      - in: path
        name: type
        schema:
          type: string
          example: firstName
        required: true
        description: Type of data.
      - in: query
        name: locale
        schema:
          type: string
        required: false
        description: Country locale code. Supported codes are those listed in the BCP 47 Language Tags, e.g. `en-GB`
      - in: query
        name: amount
        schema:
          type: integer
          maximum: 500
          default: 100
        required: false
        description: Number of values to generate.
    get:
      summary: Generate array of values
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                type: array
                example: [John, Colin, Hank]
                items:
                  type: string
                  example: John
        "400":
          $ref: "./components.yaml#/components/responses/400"
        "404":
          $ref: "./components.yaml#/components/responses/404"
  /data:
    parameters:
      - in: query
        name: locale
        schema:
          type: string
        required: false
        description: Country locale code. Supported codes are those listed in the BCP 47 Language Tags, e.g. `en-GB`
      - in: query
        name: amount
        schema:
          type: integer
          maximum: 500
          default: 100
        required: false
        description: Number of values to generate.
    post:
      summary: Generate array of objects
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/generatedData"
        "400":
          $ref: "./components.yaml#/components/responses/400"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/generateData"
components:
  schemas:
    generatedData:
      type: object
      example: { firstName: Anna, lastName: Henderson, job: Frontend developer, x: annah, email: anna@techlabs.com, telephone: +1 (917) 528-2623, links: https://techlabs.com/anna, country: United States }
    generateData:
      type: object
      example:
        {
          firstName: firstName,
          lastName: lastName,
          job: jobTitle,
          x: twitterHandle,
          email: emailAddress,
          telephone: phoneNumber,
          link: url,
          country: country
        }

  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
